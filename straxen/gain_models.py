import numpy as np

import strax
import straxen

export, __all__ = strax.exporter()
__all__ += ['ADC_TO_E', 'FIXED_TO_PE']

# Convert from ADC * samples to electrons emitted by PMT
# see pax.dsputils.adc_to_pe for calculation
ADC_TO_E  = 17142.81741

@export
def get_to_pe(run_id, gain_model, n_tpc_pmts):
    if not isinstance(gain_model, tuple):
        raise ValueError(f"gain_model must be a tuple")
    if not len(gain_model) == 2:
        raise ValueError(f"gain_model must have two elements: "
                         f"the model type and its specific configuration")
    model_type, model_conf = gain_model
    
    # Convert from ADC * samples to electrons emitted by PMT
    # see pax.dsputils.adc_to_pe for calculation
    adc_to_e  = 17142.81741
    
    if model_type == 'disabled':
        # Somebody messed up
        raise RuntimeError("Attempt to use a disabled gain model")

    if model_type == 'to_pe_per_run':
        # Load a npy file specifing a run_id -> to_pe array
        to_pe_file = model_conf
        x = straxen.get_resource(to_pe_file, fmt='npy')
        run_index = np.where(x['run_id'] == int(run_id))[0]
        if not len(run_index):
            # Gains not known: using placeholders
            run_index = [-1]
        to_pe = x[run_index[0]]['to_pe']

    elif model_type == 'to_pe_constant':
        if model_conf in FIXED_TO_PE:
            return FIXED_TO_PE[model_conf]

        # Uniform gain, specified as a to_pe factor
        to_pe = np.ones(n_tpc_pmts, dtype=np.float32) * model_conf
        
    else:
        raise NotImplementedError(f"Gain model type {model_type} not implemented")

    if len(to_pe) != n_tpc_pmts:
        raise ValueError(
            f"Gain model {gain_model} resulted in a to_pe "
            f"of length {len(to_pe)}, but n_tpc_pmts is {n_tpc_pmts}!")
    return to_pe


# Specific gain models, fixed forever. Do not remove or alter models here!
FIXED_TO_PE = {
    # First gain calibration, PMTs at 1300 V.
    # https://xe1t-wiki.lngs.infn.it/doku.php?id=xenon:giovo:first_led_run
    '1300V_20200428': np.array([0.00241, 0.0064, 0.01071, 0.01465, 0.00812, 0.03647, 0.00384, 0.0025, 0.00385, 0.00546, 0.00456, 0.00755, 0.0197, 0.00521, 0.00672, 0.04181, 0.00647, 0.00652, 0.00849, 0.01027, 0.00581, 0.01491, 0.0072, 0.00739, 0.00952, 0.00599, 0.00801, 0.00482, 0.02414, 0.01633, 0.00745, 0.00667, 0.00783, 0.01905, 0.00974, 0.00836, 0.0064, 0.00593, 0.00531, 0.00742, 0.01199, 0.00717, 0.01045, 0.01224, 0.01014, 0.0102, 0.01014, 0.00686, 0.00917, 0.01033, 0.00606, 0.00708, 0.00723, 0.00527, 0.00675, 0.01309, 0.00779, 0.01052, 0.00828, 0.00503, 0.00828, 0.02198, 0.00688, 0.00942, 0.00652, 0.01078, 0.0098, 0.00619, 0.0061, 0.01207, 0.00446, 0.00628, 0.00937, 0.00652, 0.00828, 0.00828, 0.01394, 0.01602, 0.01014, 0.00947, 0.01158, 0.00801, 0.00635, 0.01319, 0.00542, 0.01003, 0.00745, 0.00749, 0.0084, 0.00564, 0.00828, 0.00691, 0.00828, 0.00828, 0.00879, 0.00683, 0.0084, 0.01371, 0.00974, 0.00664, 0.00832, 0.01045, 0.01078, 0.00626, 0.00772, 0.00546, 0.00974, 0.00828, 0.00828, 0.00488, 0.00969, 0.00553, 0.01199, 0.01092, 0.00745, 0.00612, 0.00942, 0.00898, 0.00783, 0.01681, 0.00755, 0.01045, 0.00828, 0.00828, 0.00564, 0.00828, 0.00828, 0.01681, 0.00797, 0.00649, 0.00759, 0.00861, 0.01143, 0.00733, 0.00736, 0.01216, 0.01681, 0.00703, 0.01216, 0.00917, 0.00828, 0.00828, 0.00523, 0.00828, 0.00657, 0.01394, 0.00794, 0.00801, 0.00705, 0.01633, 0.00769, 0.00824, 0.02116, 0.00739, 0.00937, 0.00898, 0.00963, 0.01113, 0.007, 0.00783, 0.00602, 0.00717, 0.00519, 0.01843, 0.00509, 0.00521, 0.00353, 0.00487, 0.00678, 0.00879, 0.03297, 0.02721, 0.00985, 0.00549, 0.00969, 0.0056, 0.00667, 0.00861, 0.02484, 0.00697, 0.02637, 0.00759, 0.00449, 0.0011, 0.00857, 0.00828, 0.0127, 0.00688, 0.00468, 0.00606, 0.0217, 0.01843, 0.00595, 0.00581, 0.0087, 0.00599, 0.0072, 0.00423, 0.00683, 0.00644, 0.00947, 0.00755, 0.01151, 0.0084, 0.01309, 0.00717, 0.00548, 0.0112, 0.00597, 0.00912, 0.00623, 0.00922, 0.00449, 0.00888, 0.00769, 0.00927, 0.01279, 0.00765, 0.01207, 0.00809, 0.00902, 0.01602, 0.0056, 0.00765, 0.00794, 0.00551, 0.01174, 0.00509, 0.00577, 0.00597, 0.01207, 0.0112, 0.00644, 0.01027, 0.00991, 0.00575, 0.00433, 0.00828, 0.00812, 0.01948, 0.0084, 0.00591, 0.00664, 0.00691, 0.00776, 0.00548, 0.00786, 0.02348, 0.0087, 0.01092, 0.00772, 0.00786, 0.00717, 0.02198, 0.0082, 0.00902, 0.01405, 0.00688, 0.00708, 0.00985, 0.00902, 0.00694, 0.01279, 0.0098, 0.00779, 0.01033, 0.02597, 0.00729, 0.01429, 0.01039, 0.02041, 0.00542, 0.01052, 0.01617, 0.01052, 0.01106, 0.00937, 0.00828, 0.00866, 0.00884, 0.00844, 0.00902, 0.01361, 0.00776, 0.00476, 0.02317, 0.01008, 0.0135, 0.00898, 0.00647, 0.00828, 0.00861, 0.00614, 0.00958, 0.01052, 0.00617, 0.01926, 0.01453, 0.02484, 0.00652, 0.00969, 0.01039, 0.03117, 0.00828, 0.0047, 0.00805, 0.00828, 0.00614, 0.02956, 0.00907, 0.01587, 0.00947, 0.00524, 0.00717, 0.0381, 0.00902, 0.00853, 0.00917, 0.0068, 0.00828, 0.01014, 0.00922, 0.00828, 0.01884, 0.00714, 0.03499, 0.00501, 0.03571, 0.00912, 0.02065, 0.01251, 0.00568, 0.00902, 0.00783, 0.01099, 0.00521, 0.00828, 0.00686, 0.02597, 0.00912, 0.01045, 0.00893, 0.00599, 0.00812, 0.00456, 0.00714, 0.00729, 0.01174, 0.0112, 0.00451, 0.00828, 0.00942, 0.0072, 0.00932, 0.00828, 0.00937, 0.00521, 0.02597, 0.00515, 0.00927, 0.00726, 0.00659, 0.00717, 0.00917, 0.01309, 0.00801, 0.01242, 0.00664, 0.01199, 0.00739, 0.00697, 0.02956, 0.00551, 0.00591, 0.0067, 0.00474, 0.03361, 0.007, 0.01242, 0.01071, 0.00749, 0.02857, 0.00591, 0.00844, 0.00583, 0.01233, 0.00828, 0.01309, 0.00711, 0.01233, 0.00628, 0.02637, 0.00902, 0.0061, 0.01884, 0.00686, 0.00952, 0.00974, 0.00425, 0.01544, 0.0051, 0.0197, 0.0044, 0.00678, 0.01587, 0.01135, 0.00527, 0.00985, 0.01003, 0.00585, 0.00664, 0.00893, 0.00657, 0.00801, 0.01158, 0.00571, 0.00523, 0.00801, 0.00776, 0.02721, 0.00853, 0.01045, 0.0061, 0.00446, 0.00523, 0.00694, 0.00478, 0.00828, 0.00733, 0.00752, 0.0051, 0.02116, 0.01617, 0.00828, 0.0112, 0.00776, 0.00577, 0.00675, 0.03117, 0.01382, 0.0084, 0.00536, 0.00902, 0.00875, 0.03499, 0.00675, 0.0079, 0.00506, 0.02484, 0.00717, 0.01158, 0.01106, 0.00463, 0.00521, 0.00762, 0.01329, 0.00947, 0.02017, 0.00577, 0.00551, 0.0061, 0.00733, 0.00649, 0.01174, 0.00527, 0.01289, 0.00659, 0.00849, 0.00902, 0.00642, 0.01199, 0.01065, 0.00779, 0.00879, 0.00801, 0.01008, 0.01085, 0.01182, 0.00853, 0.02484, 0.00786, 0.00875, 0.02857, 0.00776, 0.00755, 0.00836, 0.01339, 0.00769, 0.01135, 0.02956, 0.00703, 0.00672, 0.01371, 0.02597])
}
