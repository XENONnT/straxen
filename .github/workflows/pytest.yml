# Test straxen on each PR
name: Test package

# Trigger this code when a new release is published
on:
  workflow_dispatch:
  release:
    types: [created]
  pull_request:
    branches:
      - master
      - stable
  push:
    branches:
      - master

jobs:
  update:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # NB: For python 3.6 and 3.7 we are going to explicitly test without a database
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install requirements for tests and latest strax
        run: |
            pip install -r extra_requirements/requirements-tests.txt
            pip install git+https://github.com/AxFoundation/strax.git
      - name: patch utilix file
        # Since we skip this step for python 3.6 and 3.7, we are testing without the database
        if:  matrix.python-version == 3.8 || matrix.python-version == 3.9
        run: bash .github/scripts/create_readonly_utilix_config.sh
        env:
          # Rundb
          RUNDB_API_URL: ${{ secrets.RUNDB_API_URL }}
          RUNDB_API_USER_READONLY: ${{ secrets.RUNDB_API_USER_READONLY }}
          RUNDB_API_PASSWORD_READONLY: ${{ secrets.RUNDB_API_PASSWORD_READONLY}}
          PYMONGO_URL: ${{ secrets.PYMONGO_URL }}
          PYMONGO_USER: ${{ secrets.PYMONGO_USER }}
          PYMONGO_PASSWORD: ${{ secrets.PYMONGO_PASSWORD }}
          PYMONGO_DATABASE: ${{ secrets.PYMONGO_DATABASE }}
          # SCADA
          SCADA_URL: ${{ secrets.SCADA_URL }}
          SCADA_VALUE_URL: ${{ secrets.SCADA_VALUE_URL }}
          SCADA_USER: ${{ secrets.SCADA_USER }}
          SCADA_LOGIN_URL: ${{ secrets.SCADA_LOGIN_URL }}
          SCADA_PWD: ${{ secrets.SCADA_PWD }}
      - name: Create pre-apply function file
        # In case we do not have database. We need to make a local file for
        # The pre_apply_function (see #559)
        env:
          HAVE_ACCESS_TO_SECTETS: ${{ secrets.RUNDB_API_URL }}
        if: env.HAVE_ACCESS_TO_SECTETS == null || matrix.python-version == 3.6 || matrix.python-version == 3.7
        run: |
          bash .github/scripts/create_pre_apply_function.sh $HOME
      - name: Test package
        run: |
          python setup.py test -v
      - name: goodbye
        run: echo goodbye
