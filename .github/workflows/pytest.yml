# Test straxen on each PR
name: Test package

# Trigger this code when a new release is published
on:
  workflow_dispatch:
  release:
    types: [created]
  pull_request:
    branches:
      - master
      - stable
  push:
    branches:
      - master

jobs:
    name: "${{ matrix.test }}_py${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: True
      matrix:
        python-version: [3.7, 3.8, 3.9]
        test: ['coveralls', 'pytest', 'pytest_no_database']
        # Only run coverage / no_database on py3.8
        exclude:
          - python-version: 3.7
            test: coveralls
          - python-version: 3.9
            test: coveralls
          - python-version: 3.7
            test: pytest_no_database
          - python-version: 3.9
            test: pytest_no_database
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install requirements for tests and latest strax
        run: |
            pip install -r extra_requirements/requirements-tests.txt
            pip install git+https://github.com/AxFoundation/strax.git
      - name: patch utilix file
        if:  matrix.test != 'pytest_no_database'
        run: bash .github/scripts/create_readonly_utilix_config.sh
        env:
          # Rundb
          RUNDB_API_URL: ${{ secrets.RUNDB_API_URL }}
          RUNDB_API_USER_READONLY: ${{ secrets.RUNDB_API_USER_READONLY }}
          RUNDB_API_PASSWORD_READONLY: ${{ secrets.RUNDB_API_PASSWORD_READONLY}}
          PYMONGO_URL: ${{ secrets.PYMONGO_URL }}
          PYMONGO_USER: ${{ secrets.PYMONGO_USER }}
          PYMONGO_PASSWORD: ${{ secrets.PYMONGO_PASSWORD }}
          PYMONGO_DATABASE: ${{ secrets.PYMONGO_DATABASE }}
          # SCADA
          SCADA_URL: ${{ secrets.SCADA_URL }}
          SCADA_VALUE_URL: ${{ secrets.SCADA_VALUE_URL }}
          SCADA_USER: ${{ secrets.SCADA_USER }}
          SCADA_LOGIN_URL: ${{ secrets.SCADA_LOGIN_URL }}
          SCADA_PWD: ${{ secrets.SCADA_PWD }}
      - name: Create pre-apply function file
        # In case we do not have database. We need to make a local file for
        # The pre_apply_function (see #559)
        env:
          HAVE_ACCESS_TO_SECTETS: ${{ secrets.RUNDB_API_URL }}
        if: env.HAVE_ACCESS_TO_SECTETS == null
        run: |
          bash .github/scripts/create_pre_apply_function.sh $HOME
      - name: Test package
        if: matrix.test == 'pytest_no_database' || matrix.test == 'pytest'
        run: |
          python setup.py test -v
      - name: Coveralls
        if:  matrix.test == 'coveralls'
        env:
          NUMBA_DISABLE_JIT: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coverage run --source=strax setup.py test -v
          coveralls --service=github
      - name: goodbye
        run: echo "tests done, bye bye"

